#!/usr/bin/env bash
# Written in [Amber](https://amber-lang.com/)
# version: 0.4.0-alpha
# date: 2025-02-27 14:25:23
array_find__0_v0() {
    local array=("${!1}")
    local value=$2
    index=0;
for element in "${array[@]}"; do
        if [ $([ "_${value}" != "_${element}" ]; echo $?) != 0 ]; then
            __AF_array_find0_v0=${index};
            return 0
fi
    (( index++ )) || true
done
    __AF_array_find0_v0=$(echo  '-' 1 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//');
    return 0
}
array_contains__2_v0() {
    local array=("${!1}")
    local value=$2
    array_find__0_v0 array[@] "${value}";
    __AF_array_find0_v0__26_18="$__AF_array_find0_v0";
    local result="$__AF_array_find0_v0__26_18"
    __AF_array_contains2_v0=$(echo ${result} '>=' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//');
    return 0
}
array_pop__7_v0() {
    local __AMBER_ARRAY_array="$1[@]"
    local array=$1
    __AMBER_LEN=("${!__AMBER_ARRAY_array}");
    local length="${#__AMBER_LEN[@]}"
    local index=$(echo ${length} '-' 1 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//')
    eval "local __AMBER_ARRAY_GET_0_array=\"\${$array[${index}]}\"";
    local element=$__AMBER_ARRAY_GET_0_array
    local __SLICE_UPPER_2=${index};
    local __SLICE_OFFSET_3=0;
    __SLICE_OFFSET_3=$((__SLICE_OFFSET_3 > 0 ? __SLICE_OFFSET_3 : 0));
    local __SLICE_LENGTH_4=$(eval "echo ${index} '-' $__SLICE_OFFSET_3 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//'");
    __SLICE_LENGTH_4=$((__SLICE_LENGTH_4 > 0 ? __SLICE_LENGTH_4 : 0));
    eval "local __AMBER_ARRAY_GET_1_array=\"\${$array[@]:$__SLICE_OFFSET_3:$__SLICE_LENGTH_4}\"";
    eval "${array}=($__AMBER_ARRAY_GET_1_array)"
    __AF_array_pop7_v0="${element}";
    return 0
}
replace__11_v0() {
    local source=$1
    local search=$2
    local replace=$3
    __AF_replace11_v0="${source//${search}/${replace}}";
    return 0
}
replace_regex__13_v0() {
    local source=$1
    local search=$2
    local replace=$3
    local extended=$4
            replace__11_v0 "${search}" "/" "\/";
        __AF_replace11_v0__16_18="${__AF_replace11_v0}";
        search="${__AF_replace11_v0__16_18}"
        replace__11_v0 "${replace}" "/" "\/";
        __AF_replace11_v0__17_19="${__AF_replace11_v0}";
        replace="${__AF_replace11_v0__17_19}"
        if [ ${extended} != 0 ]; then
            # GNU sed versions 4.0 through 4.2 support extended regex syntax,
            # but only via the "-r" option; use that if the version information
            # contains "GNU sed".
             re='\bCopyright\b.+\bFree Software Foundation\b'; [[ $(sed --version 2>/dev/null) =~ $re ]] ;
            __AS=$?
            local flag=$(if [ $(echo $__AS '==' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then echo "-r"; else echo "-E"; fi)
            __AMBER_VAL_5=$( echo "${source}" | sed "${flag}" -e "s/${search}/${replace}/g" );
            __AS=$?;
            __AF_replace_regex13_v0="${__AMBER_VAL_5}";
            return 0
else
            __AMBER_VAL_6=$( echo "${source}" | sed -e "s/${search}/${replace}/g" );
            __AS=$?;
            __AF_replace_regex13_v0="${__AMBER_VAL_6}";
            return 0
fi
}
split__14_v0() {
    local text=$1
    local delimiter=$2
    __AMBER_ARRAY_7=();
    local result=("${__AMBER_ARRAY_7[@]}")
     IFS="${delimiter}" read -rd '' -a result < <(printf %s "$text") ;
    __AS=$?
    __AF_split14_v0=("${result[@]}");
    return 0
}
split_lines__15_v0() {
    local text=$1
    split__14_v0 "${text}" "
";
    __AF_split14_v0__40_12=("${__AF_split14_v0[@]}");
    __AF_split_lines15_v0=("${__AF_split14_v0__40_12[@]}");
    return 0
}
join__17_v0() {
    local list=("${!1}")
    local delimiter=$2
    __AMBER_VAL_8=$( IFS="${delimiter}" ; echo "${list[*]}" );
    __AS=$?;
    __AF_join17_v0="${__AMBER_VAL_8}";
    return 0
}
trim_left__18_v0() {
    local text=$1
    __AMBER_VAL_9=$( echo "${text}" | sed -e 's/^[[:space:]]*//' );
    __AS=$?;
    __AF_trim_left18_v0="${__AMBER_VAL_9}";
    return 0
}
trim_right__19_v0() {
    local text=$1
    __AMBER_VAL_10=$( echo "${text}" | sed -e 's/[[:space:]]*$//' );
    __AS=$?;
    __AF_trim_right19_v0="${__AMBER_VAL_10}";
    return 0
}
trim__20_v0() {
    local text=$1
    trim_right__19_v0 "${text}";
    __AF_trim_right19_v0__65_22="${__AF_trim_right19_v0}";
    trim_left__18_v0 "${__AF_trim_right19_v0__65_22}";
    __AF_trim_left18_v0__65_12="${__AF_trim_left18_v0}";
    __AF_trim20_v0="${__AF_trim_left18_v0__65_12}";
    return 0
}
text_contains__25_v0() {
    local text=$1
    local phrase=$2
    __AMBER_VAL_11=$( if [[ "${text}" == *"${phrase}"* ]]; then
    echo 1
  fi );
    __AS=$?;
    local result="${__AMBER_VAL_11}"
    __AF_text_contains25_v0=$([ "_${result}" != "_1" ]; echo $?);
    return 0
}
match_regex__28_v0() {
    local source=$1
    local search=$2
    local extended=$3
            replace__11_v0 "${search}" "/" "\/";
        __AF_replace11_v0__130_18="${__AF_replace11_v0}";
        search="${__AF_replace11_v0__130_18}"
        local output=""
        if [ ${extended} != 0 ]; then
            # GNU sed versions 4.0 through 4.2 support extended regex syntax,
            # but only via the "-r" option; use that if the version information
            # contains "GNU sed".
             re='\bCopyright\b.+\bFree Software Foundation\b'; [[ $(sed --version 2>/dev/null) =~ $re ]] ;
            __AS=$?
            local flag=$(if [ $(echo $__AS '==' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then echo "-r"; else echo "-E"; fi)
            __AMBER_VAL_12=$( echo "${source}" | sed "${flag}" -ne "/${search}/p" );
            __AS=$?;
            output="${__AMBER_VAL_12}"
else
            __AMBER_VAL_13=$( echo "${source}" | sed -ne "/${search}/p" );
            __AS=$?;
            output="${__AMBER_VAL_13}"
fi
        if [ $([ "_${output}" == "_" ]; echo $?) != 0 ]; then
            __AF_match_regex28_v0=1;
            return 0
fi
    __AF_match_regex28_v0=0;
    return 0
}
starts_with__31_v0() {
    local text=$1
    local prefix=$2
    __AMBER_VAL_14=$( if [[ "${text}" == "${prefix}"* ]]; then
    echo 1
  fi );
    __AS=$?;
    local result="${__AMBER_VAL_14}"
    __AF_starts_with31_v0=$([ "_${result}" != "_1" ]; echo $?);
    return 0
}
ends_with__32_v0() {
    local text=$1
    local suffix=$2
    __AMBER_VAL_15=$( if [[ "${text}" == *"${suffix}" ]]; then
    echo 1
  fi );
    __AS=$?;
    local result="${__AMBER_VAL_15}"
    __AF_ends_with32_v0=$([ "_${result}" != "_1" ]; echo $?);
    return 0
}
dir_exists__43_v0() {
    local path=$1
     [ -d "${path}" ] ;
    __AS=$?;
if [ $__AS != 0 ]; then
        __AF_dir_exists43_v0=0;
        return 0
fi
    __AF_dir_exists43_v0=1;
    return 0
}
file_exists__44_v0() {
    local path=$1
     [ -f "${path}" ] ;
    __AS=$?;
if [ $__AS != 0 ]; then
        __AF_file_exists44_v0=0;
        return 0
fi
    __AF_file_exists44_v0=1;
    return 0
}
file_read__45_v0() {
    local path=$1
    __AMBER_VAL_16=$( < "${path}" );
    __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_read45_v0=''
return $__AS
fi;
    __AF_file_read45_v0="${__AMBER_VAL_16}";
    return 0
}
file_write__46_v0() {
    local path=$1
    local content=$2
    __AMBER_VAL_17=$( echo "${content}" > "${path}" );
    __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_write46_v0=''
return $__AS
fi;
    __AF_file_write46_v0="${__AMBER_VAL_17}";
    return 0
}
file_append__47_v0() {
    local path=$1
    local content=$2
    __AMBER_VAL_18=$( echo "${content}" >> "${path}" );
    __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_append47_v0=''
return $__AS
fi;
    __AF_file_append47_v0="${__AMBER_VAL_18}";
    return 0
}
file_extract__55_v0() {
    local path=$1
    local target=$2
    file_exists__44_v0 "${path}";
    __AF_file_exists44_v0__117_8="$__AF_file_exists44_v0";
    if [ "$__AF_file_exists44_v0__117_8" != 0 ]; then
        match_regex__28_v0 "${path}" "\.\(tar\.bz2\|tbz\|tbz2\)\$" 0;
        __AF_match_regex28_v0__119_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.\(tar\.gz\|tgz\)\$" 0;
        __AF_match_regex28_v0__120_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.\(tar\.xz\|txz\$\)\$" 0;
        __AF_match_regex28_v0__121_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.bz2\$" 0;
        __AF_match_regex28_v0__122_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.deb\$" 0;
        __AF_match_regex28_v0__123_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.gz\$" 0;
        __AF_match_regex28_v0__124_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.rar\$" 0;
        __AF_match_regex28_v0__125_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.rpm\$" 0;
        __AF_match_regex28_v0__126_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.tar\$" 0;
        __AF_match_regex28_v0__127_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.xz\$" 0;
        __AF_match_regex28_v0__128_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.7z\$" 0;
        __AF_match_regex28_v0__129_13="$__AF_match_regex28_v0";
        match_regex__28_v0 "${path}" "\.\(zip\|war\|jar\)\$" 0;
        __AF_match_regex28_v0__130_13="$__AF_match_regex28_v0";
        if [ "$__AF_match_regex28_v0__119_13" != 0 ]; then
             tar xvjf "${path}" -C "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__120_13" != 0 ]; then
             tar xzf "${path}" -C "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__121_13" != 0 ]; then
             tar xJf "${path}" -C "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__122_13" != 0 ]; then
             bunzip2 "${path}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__123_13" != 0 ]; then
             dpkg-deb -xv "${path}" "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__124_13" != 0 ]; then
             gunzip "${path}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__125_13" != 0 ]; then
             unrar x "${path}" "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__126_13" != 0 ]; then
             rpm2cpio "${path}" | cpio -idm ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__127_13" != 0 ]; then
             tar xf "${path}" -C "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__128_13" != 0 ]; then
             xz --decompress "${path}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__129_13" != 0 ]; then
             7z -y "${path}" -o "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
elif [ "$__AF_match_regex28_v0__130_13" != 0 ]; then
             unzip "${path}" -d "${target}" ;
            __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_extract55_v0=''
return $__AS
fi
else
            echo "Error: Unsupported file type"
            __AF_file_extract55_v0='';
            return 3
fi
else
        echo "Error: File not found"
        __AF_file_extract55_v0='';
        return 2
fi
}
__0_jura_toml_name="Jura.toml"
find_path_to_jura_toml__60_v0() {
    local path=$1
    __AMBER_VAL_19=$( pwd );
    __AS=$?;
    local wd=$(if [ $([ "_${path}" != "_" ]; echo $?) != 0 ]; then echo "${__AMBER_VAL_19}"; else echo "${path}"; fi)
    __AMBER_VAL_20=$( realpath ${wd} );
    __AS=$?;
    wd="${__AMBER_VAL_20}"
    while :
do
        file_exists__44_v0 "${wd}/${__0_jura_toml_name}";
        __AF_file_exists44_v0__14_12="$__AF_file_exists44_v0";
        if [ "$__AF_file_exists44_v0__14_12" != 0 ]; then
            __AF_find_path_to_jura_toml60_v0="${wd}/${__0_jura_toml_name}";
            return 0
fi
        if [ $([ "_${wd}" != "_/" ]; echo $?) != 0 ]; then
            break
fi
        __AMBER_VAL_21=$( dirname ${wd} );
        __AS=$?;
        wd="${__AMBER_VAL_21}"
done
    __AF_find_path_to_jura_toml60_v0='';
    return 1
}
version_of_pkg__61_v0() {
    local toml_content=$1
    local pkg_url=$2
    split_lines__15_v0 "${toml_content}";
    __AF_split_lines15_v0__25_17=("${__AF_split_lines15_v0[@]}");
    for line in "${__AF_split_lines15_v0__25_17[@]}"; do
        match_regex__28_v0 "${line}" "\"?${pkg_url}\"?\s*=\s*\".+\"" 1;
        __AF_match_regex28_v0__26_12="$__AF_match_regex28_v0";
        if [ "$__AF_match_regex28_v0__26_12" != 0 ]; then
            replace_regex__13_v0 "${line}" "^.+=\s*\"?" "" 1;
            __AF_replace_regex13_v0__27_34="${__AF_replace_regex13_v0}";
            replace_regex__13_v0 "${__AF_replace_regex13_v0__27_34}" "\"\$" "" 0;
            __AF_replace_regex13_v0__27_20="${__AF_replace_regex13_v0}";
            __AF_version_of_pkg61_v0="${__AF_replace_regex13_v0__27_20}";
            return 0
fi
done
    __AF_version_of_pkg61_v0='';
    return 1
}
is_command__119_v0() {
    local command=$1
     [ -x "$(command -v ${command})" ] ;
    __AS=$?;
if [ $__AS != 0 ]; then
        __AF_is_command119_v0=0;
        return 0
fi
    __AF_is_command119_v0=1;
    return 0
}
printf__125_v0() {
    local format=$1
    local args=("${!2}")
     args=("${format}" "${args[@]}") ;
    __AS=$?
     printf "${args[@]}" ;
    __AS=$?
}
echo_error__135_v0() {
    local message=$1
    local exit_code=$2
    __AMBER_ARRAY_22=("${message}");
    printf__125_v0 "\x1b[1;3;97;41m%s\x1b[0m
" __AMBER_ARRAY_22[@];
    __AF_printf125_v0__162_5="$__AF_printf125_v0";
    echo "$__AF_printf125_v0__162_5" > /dev/null 2>&1
    if [ $(echo ${exit_code} '>' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
        exit ${exit_code}
fi
}
file_download__161_v0() {
    local url=$1
    local path=$2
    is_command__119_v0 "curl";
    __AF_is_command119_v0__9_9="$__AF_is_command119_v0";
    is_command__119_v0 "wget";
    __AF_is_command119_v0__12_9="$__AF_is_command119_v0";
    is_command__119_v0 "aria2c";
    __AF_is_command119_v0__15_9="$__AF_is_command119_v0";
    if [ "$__AF_is_command119_v0__9_9" != 0 ]; then
         curl -L -o "${path}" "${url}" ;
        __AS=$?
elif [ "$__AF_is_command119_v0__12_9" != 0 ]; then
         wget "${url}" -P "${path}" ;
        __AS=$?
elif [ "$__AF_is_command119_v0__15_9" != 0 ]; then
         aria2c "${url}" -d "${path}" ;
        __AS=$?
else
        __AF_file_download161_v0=0;
        return 0
fi
    __AF_file_download161_v0=1;
    return 0
}
file_globstar__174_v0() {
    local path=$1
     shopt -q globstar ;
    __AS=$?
    local temp_globstar_enabled=$(echo $__AS '==' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//')
     shopt -s globstar  > /dev/null 2>&1;
    __AS=$?
    __AMBER_VAL_23=$( eval "for file in ${path}; do [ -e \"\$file\" ] && echo \"\$file\"; done" );
    __AS=$?;
if [ $__AS != 0 ]; then
__AF_file_globstar174_v0=()
return $__AS
fi;
    local files="${__AMBER_VAL_23}"
    if [ ${temp_globstar_enabled} != 0 ]; then
         shopt -s globstar  > /dev/null 2>&1;
        __AS=$?
else
         shopt -u globstar  > /dev/null 2>&1;
        __AS=$?
fi
    split_lines__15_v0 "${files}";
    __AF_split_lines15_v0__21_12=("${__AF_split_lines15_v0[@]}");
    __AF_file_globstar174_v0=("${__AF_split_lines15_v0__21_12[@]}");
    return 0
}
__AMBER_ARRAY_24=("github.com");
__1_available_repositories=("${__AMBER_ARRAY_24[@]}")
__2_vendor_path=".jurrassic_park"
imports_from_file__176_v0() {
    local file=$1
    __AMBER_ARRAY_25=();
    local imports=("${__AMBER_ARRAY_25[@]}")
    local partial_import=""
    while IFS= read -r line; do
        starts_with__31_v0 "${line}" "import";
        __AF_starts_with31_v0__39_13="$__AF_starts_with31_v0";
        text_contains__25_v0 "${line}" "\"";
        __AF_text_contains25_v0__39_45="$__AF_text_contains25_v0";
        starts_with__31_v0 "${line}" "import";
        __AF_starts_with31_v0__42_38="$__AF_starts_with31_v0";
        if [ $(echo "$__AF_starts_with31_v0__39_13" '&&' "$__AF_text_contains25_v0__39_45" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
            __AMBER_ARRAY_26=("${line}");
            imports+=("${__AMBER_ARRAY_26[@]}")
elif [ $(echo $([ "_${partial_import}" != "_" ]; echo $?) '&&' "$__AF_starts_with31_v0__42_38" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
            trim__20_v0 "${line}";
            __AF_trim20_v0__43_35="${__AF_trim20_v0}";
            partial_import+="${__AF_trim20_v0__43_35}"
elif [ $([ "_${partial_import}" == "_" ]; echo $?) != 0 ]; then
            partial_import+="${line}"
            text_contains__25_v0 "${partial_import}" "\"";
            __AF_text_contains25_v0__47_20="$__AF_text_contains25_v0";
            if [ "$__AF_text_contains25_v0__47_20" != 0 ]; then
                trim__20_v0 "${partial_import}";
                __AF_trim20_v0__48_33="${__AF_trim20_v0}";
                __AMBER_ARRAY_27=("${__AF_trim20_v0__48_33}");
                imports+=("${__AMBER_ARRAY_27[@]}")
                partial_import=""
fi
fi
done <"${file}"
    __AF_imports_from_file176_v0=("${imports[@]}");
    return 0
}
pkg_parse__177_v0() {
    local text=$1
    replace_regex__13_v0 "${text}" ".+from\s\"|\"" "" 1;
    __AF_replace_regex13_v0__58_12="${__AF_replace_regex13_v0}";
    text="${__AF_replace_regex13_v0__58_12}"
    split__14_v0 "${text}" "/";
    __AF_split14_v0__59_20=("${__AF_split14_v0[@]}");
    local tokens=("${__AF_split14_v0__59_20[@]}")
    local length="${#tokens[@]}"
    local url=("${tokens[@]:0:3}")
    local __SLICE_UPPER_28=${length};
    local __SLICE_OFFSET_29=3;
    __SLICE_OFFSET_29=$((__SLICE_OFFSET_29 > 0 ? __SLICE_OFFSET_29 : 0));
    local __SLICE_LENGTH_30=$(echo ${length} '-' $__SLICE_OFFSET_29 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//');
    __SLICE_LENGTH_30=$((__SLICE_LENGTH_30 > 0 ? __SLICE_LENGTH_30 : 0));
    local path=("${tokens[@]:$__SLICE_OFFSET_29:$__SLICE_LENGTH_30}")
    join__17_v0 url[@] "/";
    __AF_join17_v0__65_9="${__AF_join17_v0}";
    join__17_v0 path[@] "/";
    __AF_join17_v0__66_9="${__AF_join17_v0}";
    __AMBER_ARRAY_31=("${__AF_join17_v0__65_9}" "${__AF_join17_v0__66_9}");
    __AF_pkg_parse177_v0=("${__AMBER_ARRAY_31[@]}");
    return 0
}
import_to_pkg__178_v0() {
    local imp=$1
    replace_regex__13_v0 "${imp}" ".+from\s\"|\"" "" 1;
    __AF_replace_regex13_v0__71_12="${__AF_replace_regex13_v0}";
    __AF_import_to_pkg178_v0="${__AF_replace_regex13_v0__71_12}";
    return 0
}
is_external_package__179_v0() {
    local pkg=$1
    ends_with__32_v0 "${pkg}" ".ab";
    __AF_ends_with32_v0__75_12="$__AF_ends_with32_v0";
    if [ $(echo  '!' "$__AF_ends_with32_v0__75_12" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
        __AF_is_external_package179_v0=0;
        return 0
fi
    for repo in "${__1_available_repositories[@]}"; do
        text_contains__25_v0 "${pkg}" "${repo}";
        __AF_text_contains25_v0__78_12="$__AF_text_contains25_v0";
        if [ "$__AF_text_contains25_v0__78_12" != 0 ]; then
            __AF_is_external_package179_v0=1;
            return 0
fi
done
    __AF_is_external_package179_v0=0;
    return 0
}
imports_to_external_pkgs__181_v0() {
    local imports=("${!1}")
    __AMBER_ARRAY_32=();
    local pkgs=("${__AMBER_ARRAY_32[@]}")
    for imp in "${imports[@]}"; do
        import_to_pkg__178_v0 "${imp}";
        __AF_import_to_pkg178_v0__96_21="${__AF_import_to_pkg178_v0}";
        local pkg="${__AF_import_to_pkg178_v0__96_21}"
        is_external_package__179_v0 "${pkg}";
        __AF_is_external_package179_v0__97_12="$__AF_is_external_package179_v0";
        if [ "$__AF_is_external_package179_v0__97_12" != 0 ]; then
            __AMBER_ARRAY_33=("${pkg}");
            pkgs+=("${__AMBER_ARRAY_33[@]}")
fi
done
    __AF_imports_to_external_pkgs181_v0=("${pkgs[@]}");
    return 0
}
pkg_download__182_v0() {
    local url=$1
    local version=$2
    replace_regex__13_v0 "${url}" ".+/" "" 1;
    __AF_replace_regex13_v0__104_18="${__AF_replace_regex13_v0}";
    local name="${__AF_replace_regex13_v0__104_18}"
    # If release exists
    # TODO
    # else download the all files
            dir_exists__43_v0 "${__2_vendor_path}/${url}/${version}";
        __AF_dir_exists43_v0__109_12="$__AF_dir_exists43_v0";
        if [ "$__AF_dir_exists43_v0__109_12" != 0 ]; then
            __AF_pkg_download182_v0='';
            return 0
fi
        __AMBER_VAL_34=$( mktemp --directory jura-${name}.XXXXXXXXXX );
        __AS=$?;
        local temp="${__AMBER_VAL_34}"
        local archive_path="${temp}/${version}.tar.gz"
        file_download__161_v0 "https://${url}/archive/refs/heads/${version}.tar.gz" "${archive_path}";
        __AF_file_download161_v0__114_9="$__AF_file_download161_v0";
        echo "$__AF_file_download161_v0__114_9" > /dev/null 2>&1
        file_extract__55_v0 "${archive_path}" "${temp}";
        __AS=$?;
        __AF_file_extract55_v0__116_9="$__AF_file_extract55_v0";
        echo "$__AF_file_extract55_v0__116_9" > /dev/null 2>&1
         mkdir -p "${__2_vendor_path}/${url}/" ;
        __AS=$?
         mv "${temp}/${name}-${version}" "${__2_vendor_path}/${url}/${version}/" ;
        __AS=$?
         rm -rf "${temp}" ;
        __AS=$?
}
install__183_v0() {
    local path=$1
    file_globstar__174_v0 "${path}/**/*.ab";
    __AS=$?;
    __AF_file_globstar174_v0__124_23=("${__AF_file_globstar174_v0[@]}");
    local files=("${__AF_file_globstar174_v0__124_23[@]}")
    __AMBER_ARRAY_35=();
    local done_files=("${__AMBER_ARRAY_35[@]}")
    find_path_to_jura_toml__60_v0 "";
    __AS=$?;
if [ $__AS != 0 ]; then
        echo_error__135_v0 "Cannot find Jura.toml file" 1;
        __AF_echo_error135_v0__127_9="$__AF_echo_error135_v0";
        echo "$__AF_echo_error135_v0__127_9" > /dev/null 2>&1
fi;
    __AF_find_path_to_jura_toml60_v0__126_36="${__AF_find_path_to_jura_toml60_v0}";
    file_read__45_v0 "${__AF_find_path_to_jura_toml60_v0__126_36}";
    __AS=$?;
if [ $__AS != 0 ]; then
        echo_error__135_v0 "Reading Jura.toml file failed" 1;
        __AF_echo_error135_v0__129_9="$__AF_echo_error135_v0";
        echo "$__AF_echo_error135_v0__129_9" > /dev/null 2>&1
fi;
    __AF_file_read45_v0__126_26="${__AF_file_read45_v0}";
    local toml_content="${__AF_file_read45_v0__126_26}"
    while :
do
        if [ $(echo "${#files[@]}" '==' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
            break
fi
        array_pop__7_v0 files;
        __AF_array_pop7_v0__134_22="${__AF_array_pop7_v0}";
        local file="${__AF_array_pop7_v0__134_22}"
        array_contains__2_v0 done_files[@] "${file}";
        __AF_array_contains2_v0__135_12="$__AF_array_contains2_v0";
        if [ "$__AF_array_contains2_v0__135_12" != 0 ]; then
            continue
fi
        imports_from_file__176_v0 "${file}";
        __AF_imports_from_file176_v0__137_25=("${__AF_imports_from_file176_v0[@]}");
        local imports=("${__AF_imports_from_file176_v0__137_25[@]}")
        imports_to_external_pkgs__181_v0 imports[@];
        __AF_imports_to_external_pkgs181_v0__138_20=("${__AF_imports_to_external_pkgs181_v0[@]}");
        for pkg in "${__AF_imports_to_external_pkgs181_v0__138_20[@]}"; do
            pkg_parse__177_v0 "${pkg}";
            __AF_pkg_parse177_v0__139_32=("${__AF_pkg_parse177_v0[@]}");
            local parsed_pkg=("${__AF_pkg_parse177_v0__139_32[@]}")
            local url="${parsed_pkg[0]}"
            local pkg_path="${parsed_pkg[1]}"
            __AMBER_VAL_36=$( dirname ${file} );
            __AS=$?;
            find_path_to_jura_toml__60_v0 "${__AMBER_VAL_36}";
            __AS=$?;
if [ $__AS != 0 ]; then
                echo_error__135_v0 "Cannot find Jura.toml file" 1;
                __AF_echo_error135_v0__143_17="$__AF_echo_error135_v0";
                echo "$__AF_echo_error135_v0__143_17" > /dev/null 2>&1
fi;
            __AF_find_path_to_jura_toml60_v0__142_44="${__AF_find_path_to_jura_toml60_v0}";
            file_read__45_v0 "${__AF_find_path_to_jura_toml60_v0__142_44}";
            __AS=$?;
if [ $__AS != 0 ]; then
                echo_error__135_v0 "Reading Jura.toml file failed" 1;
                __AF_echo_error135_v0__145_17="$__AF_echo_error135_v0";
                echo "$__AF_echo_error135_v0__145_17" > /dev/null 2>&1
fi;
            __AF_file_read45_v0__142_34="${__AF_file_read45_v0}";
            __3_toml_content="${__AF_file_read45_v0__142_34}"
            version_of_pkg__61_v0 "${__3_toml_content}" "${url}";
            __AS=$?;
if [ $__AS != 0 ]; then
                echo_error__135_v0 "No entry found at Jura.toml
Please add ${url} in your Jura.toml" 1;
                __AF_echo_error135_v0__148_17="$__AF_echo_error135_v0";
                echo "$__AF_echo_error135_v0__148_17" > /dev/null 2>&1
fi;
            __AF_version_of_pkg61_v0__147_29="${__AF_version_of_pkg61_v0}";
            local version="${__AF_version_of_pkg61_v0__147_29}"
            dir_exists__43_v0 "${__2_vendor_path}/${url}/${version}/${pkg_path}";
            __AF_dir_exists43_v0__150_20="$__AF_dir_exists43_v0";
            if [ $(echo  '!' "$__AF_dir_exists43_v0__150_20" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
                pkg_download__182_v0 "${url}" "${version}";
                __AF_pkg_download182_v0__151_17="$__AF_pkg_download182_v0";
                echo "$__AF_pkg_download182_v0__151_17" > /dev/null 2>&1
                file_globstar__174_v0 "${__2_vendor_path}/${url}/${version}/**/*.ab";
                __AS=$?;
                __AF_file_globstar174_v0__152_32=("${__AF_file_globstar174_v0[@]}");
                files+=("${__AF_file_globstar174_v0__152_32[@]}")
fi
            __AMBER_VAL_37=$( dirname ${file} );
            __AS=$?;
            local dest="${__AMBER_VAL_37}"
            file_exists__44_v0 "${dest}/${url}/${pkg_path}";
            __AF_file_exists44_v0__155_20="$__AF_file_exists44_v0";
            if [ $(echo  '!' "$__AF_file_exists44_v0__155_20" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
                 mkdir -p "${dest}/${url}" ;
                __AS=$?
                 rmdir "${dest}/${url}" ;
                __AS=$?
                 ln -s -f "$PWD/${__2_vendor_path}/${url}/${version}" "$PWD/${dest}/${url}" ;
                __AS=$?
fi
done
        __AMBER_ARRAY_38=("${file}");
        done_files+=("${__AMBER_ARRAY_38[@]}")
done
}
install_command__184_v0() {
    local args=("${!1}")
    local path="."
    i=0;
for arg in "${args[@]}"; do
        starts_with__31_v0 "${arg}" "--";
        __AF_starts_with31_v0__168_27="$__AF_starts_with31_v0";
        if [ $(echo $(echo ${i} '!=' 0 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') '&&' $(echo  '!' "$__AF_starts_with31_v0__168_27" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
            path="${arg}"
fi
    (( i++ )) || true
done
    echo "installing..."
    install__183_v0 "${path}";
    __AF_install183_v0__172_5="$__AF_install183_v0";
    echo "$__AF_install183_v0__172_5" > /dev/null 2>&1
}
init_command__189_v0() {
    local args=("${!1}")
    local gitignore="jurrasic_park
**/github.com"
    file_exists__44_v0 ".gitignore";
    __AF_file_exists44_v0__10_8="$__AF_file_exists44_v0";
    if [ "$__AF_file_exists44_v0__10_8" != 0 ]; then
        file_append__47_v0 ".gitignore" "${gitignore}";
        __AS=$?;
if [ $__AS != 0 ]; then
__AF_init_command189_v0=''
return $__AS
fi;
        __AF_file_append47_v0__11_9="${__AF_file_append47_v0}";
        echo "${__AF_file_append47_v0__11_9}" > /dev/null 2>&1
else
        file_write__46_v0 ".gitignore" "${gitignore}";
        __AS=$?;
if [ $__AS != 0 ]; then
__AF_init_command189_v0=''
return $__AS
fi;
        __AF_file_write46_v0__13_9="${__AF_file_write46_v0}";
        echo "${__AF_file_write46_v0__13_9}" > /dev/null 2>&1
fi
}
print_help_message__192_v0() {
    local code=$1
    echo "Usage: jura [OPTIONS] [COMMAND]

Commands:
  init     Initialize a package
  install  Install packages
  update   update packages

Options:
    -h, --help  Print help"
}
declare -r argv=("$0" "$@")
    length="${#argv[@]}"
    array_contains__2_v0 argv[@] "-h";
    __AF_array_contains2_v0__57_9="$__AF_array_contains2_v0";
    array_contains__2_v0 argv[@] "--help";
    __AF_array_contains2_v0__57_39="$__AF_array_contains2_v0";
    if [ $(echo ${length} '==' 1 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
        print_help_message__192_v0 1;
        __AF_print_help_message192_v0__56_13="$__AF_print_help_message192_v0";
        echo "$__AF_print_help_message192_v0__56_13" > /dev/null 2>&1
elif [ $(echo "$__AF_array_contains2_v0__57_9" '||' "$__AF_array_contains2_v0__57_39" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//') != 0 ]; then
        print_help_message__192_v0 0;
        __AF_print_help_message192_v0__58_13="$__AF_print_help_message192_v0";
        echo "$__AF_print_help_message192_v0__58_13" > /dev/null 2>&1
fi
    i=0;
for arg in "${argv[@]}"; do
        if [ $([ "_${arg}" != "_install" ]; echo $?) != 0 ]; then
            __SLICE_UPPER_39=${length};
            __SLICE_OFFSET_40=${i};
            __SLICE_OFFSET_40=$((__SLICE_OFFSET_40 > 0 ? __SLICE_OFFSET_40 : 0));
            __SLICE_LENGTH_41=$(echo ${length} '-' $__SLICE_OFFSET_40 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//');
            __SLICE_LENGTH_41=$((__SLICE_LENGTH_41 > 0 ? __SLICE_LENGTH_41 : 0));
            sub_argv=("${argv[@]:$__SLICE_OFFSET_40:$__SLICE_LENGTH_41}")
            install_command__184_v0 sub_argv[@];
            __AF_install_command184_v0__64_17="$__AF_install_command184_v0";
            echo "$__AF_install_command184_v0__64_17" > /dev/null 2>&1
elif [ $([ "_${arg}" != "_init" ]; echo $?) != 0 ]; then
            __SLICE_UPPER_42=${length};
            __SLICE_OFFSET_43=${i};
            __SLICE_OFFSET_43=$((__SLICE_OFFSET_43 > 0 ? __SLICE_OFFSET_43 : 0));
            __SLICE_LENGTH_44=$(echo ${length} '-' $__SLICE_OFFSET_43 | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//');
            __SLICE_LENGTH_44=$((__SLICE_LENGTH_44 > 0 ? __SLICE_LENGTH_44 : 0));
            sub_argv=("${argv[@]:$__SLICE_OFFSET_43:$__SLICE_LENGTH_44}")
            init_command__189_v0 sub_argv[@];
            __AS=$?;
if [ $__AS != 0 ]; then

exit $__AS
fi;
            __AF_init_command189_v0__68_17="$__AF_init_command189_v0";
            echo "$__AF_init_command189_v0__68_17" > /dev/null 2>&1
fi
    (( i++ )) || true
done
